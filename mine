local avoidBlocks = 
{
  { name = "minecraft:diamond_ore", metadata = 0 },
  { name = "minecraft:lapis_ore",   metadata = 0 },
}  

local direction = { fwd=1, up=2, down=3 }
local moveFn = { turtle.forward, turtle.up, turtle.down }
local digFn = { turtle.dig, turtle.digUp, turtle.digDown }
local inspectFn = { turtle.inspect, turtle.inspectUp, turtle.inspectDown }

local MaxFuelLevel = 400

local args = { ... }
if #args == 0 then
	print( "Usage: excavate <length> [width]" )
	return
end

local MaxTunnelLength = tonumber(args[1])
local MaxTunnelWidth = tonumber(args[2]) or 0

local function WantAvoid(dir)
	local ok, data = inspectFn[dir]()
	if ok then 
    for i, block in ipairs(avoidBlocks) do
      if block.name == data.name and block.metadata == data.metadata then
        return true
      end
    end
  end
  return false
end

local function SelectSlot(blockName)
  data = turtle.getItemDetail()
  if (data and data.name == blockName) then
    return true
  end
  
  for i = 1, 16 do
    data = turtle.getItemDetail(i)
    if (data and data.name == blockName) then
      turtle.select(i)
      return true
    end
  end
  
  return false
end

local function SelectEnderChest()
  return SelectSlot("EnderStorage:enderChest") or SelectSlot("minecraft:ender_chest") 
end

local function DumpItems()
  -- Place the chest. 
  local chest = SelectEnderChest()
  assert(not turtle.inspectDown() or turtle.digDown(), "Can't dig down")
  assert(not chest or turtle.placeDown(), "Can't place chest")

  -- Dump the stuff. 
  local gotCoal = false
  for i = 1, 16 do
    turtle.select(i)
    if turtle.getItemCount(i) > 0 then
      if not gotCoal and turtle.getItemDetail(i).name == "minecraft:coal" then
        gotCoal = true
      else 
        assert(turtle.dropDown(), "Can't drop items - is the chest full?")
      end
    end
  end

  -- Retrieve the chest. 
  turtle.select(1)
  assert(not chest or turtle.digDown(), "Can't break the chest")
end

local function DumpItemsIfFull()
  if turtle.getItemCount(16) > 0 then
    DumpItems()
  end
end

local function Refuel()
  while turtle.getFuelLevel() < MaxFuelLevel and SelectSlot("minecraft:coal") do
    turtle.refuel(1)
    print("Refuelled... fuel level now:".. turtle.getFuelLevel())
  end
  assert(turtle.getFuelLevel() > 0, "Out of fuel!")
end

local function Dig(dir)
  digFn[dir]()
  Refuel()
  DumpItemsIfFull()
end

local function DigAndMove(dir)
  while not moveFn[dir]() do
    Dig(dir)
  end
    Refuel()
end

local function Turn180()
  turtle.turnLeft()
  turtle.turnLeft()
end

local function Run()
  if not SelectEnderChest() then -- Just to check we've got one.
    print("Warning: No ender chest found")
  end

  print("Fuel level: ".. turtle.getFuelLevel())

  local offsetH = 0
  local offsetV = 0
  local delta = 1
  local width = 0
  
  while true do
    local avoidFwd = WantAvoid(direction.fwd) 
    local avoidUp = WantAvoid(direction.up) 
    local avoidDown = WantAvoid(direction.down) 
    
    if not avoidUp then Dig(direction.up) end
    if not avoidDown then Dig(direction.down) end
   
    if offsetH == MaxTunnelLength - 1 and delta > 0 then 
      width = width + 1
      if width == MaxTunnelWidth then break end
      turtle.turnLeft()
      DigAndMove(direction.fwd) -- TODO: Avoid. 
      turtle.turnLeft()
      delta = -1
    elseif offsetH == 0 and delta < 0 then 
      width = width + 1
      if width == MaxTunnelWidth then break end
      turtle.turnRight()
      DigAndMove(direction.fwd) -- TODO: Avoid. 
      turtle.turnRight()
      delta = 1
    elseif avoidFwd then
        break
    else
      DigAndMove(direction.fwd)
      offsetH = offsetH + delta
    end

  end
end  

Run()

